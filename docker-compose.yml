services:
  frontend:
    build: boardgameschedulerfrontend\
    ports:
      - "3000:3000"
    environment:
      - BACKEND_API_URL=https://backend:80
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PORT=3000
      - NODE_ENV=development
      - HOSTNAME=0.0.0.0
    depends_on:
      - backend
  backend:
    build: BoardGameSchedulerBackend\BoardGameSchedulerBackend\
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ApplyMigarionOnStartup=true
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=AppDB;Username=postgres;Password=yourpassword
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=AppDB
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
